from xml.etree.ElementTree import Element, SubElement, Comment,tostring
from xml.etree import ElementTree
from xml.dom import minidom
import datetime


# H. sappiens
# 4UG0 Chain L5
# A`4548/N1
# A`3908/N1
# C`2794/N3

# E. coli
# 4V9D Chain CA
# A 2602
# A 2062
# A 1614


def prettify(elem):
    """Return a pretty-printed XML string for the Element."""
    rough_string = ElementTree.tostring(elem, 'utf-8')
    reparsed     = minidom.parseString(rough_string)
    return reparsed.toprettyxml(indent="  ")


def make_input_config():
    Tunnels = Element('Tunnels')
    comment = Comment('This template was autogenerated.')
    Tunnels.append(comment)

    t_inputfile      = SubElement(Tunnels, 'Input')
    t_inputfile.text = 'InputFile path goes here'

    t_workdir      = SubElement(Tunnels, 'WorkingDirectory')
    t_workdir.text = 'OutputDirectory'

    t_params = SubElement(Tunnels, "Params")
    t_cavity = SubElement(t_params, "Cavity", {
        'ProbeRadius':"3",
        'InteriorThreshold':"1.25"
    })
    t_tunnel = SubElement(t_params, "Tunnel", {
        'SurfaceCoverRadius':"10",
        'OriginRadius':"5",
        'AutoOriginCoverRadius':"10"
    })


    t_export  = SubElement(Tunnels, "Export")
    t_formats = SubElement(t_export, "Formats", {
        'Mesh':"1", 'PyMol':"1", 'CSV':"1"
    })
    t_types   = SubElement(t_export, "Types",{
        'Cavities':"1",'Tunnels':"1"
    })
    t_mesh    = SubElement(t_export, "Mesh",{
        'Density':"1.33", 'Compress':"1"
    })
    t_pymol   = SubElement(t_export, "PyMol",{
        'SurfaceType':"Surface"
    })

    t_origins=SubElement(Tunnels, "Origins",{
        'Auto':"1"
    })

    print (prettify(Tunnels))